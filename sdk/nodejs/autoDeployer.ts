// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AutoDeployer extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'auto-deploy:index:AutoDeployer';

    /**
     * Returns true if the given object is an instance of AutoDeployer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutoDeployer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutoDeployer.__pulumiType;
    }

    public /*out*/ readonly dcdownstreamWebhooks!: pulumi.Output<string[]>;
    public /*out*/ readonly downstreamRef!: pulumi.Output<string>;
    public readonly downstreamRefs!: pulumi.Output<string[]>;
    public readonly organization!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    public readonly stack!: pulumi.Output<string>;

    /**
     * Create a AutoDeployer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutoDeployerArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.downstreamRefs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'downstreamRefs'");
            }
            if ((!args || args.organization === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organization'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.stack === undefined) && !opts.urn) {
                throw new Error("Missing required property 'stack'");
            }
            resourceInputs["downstreamRefs"] = args ? args.downstreamRefs : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["stack"] = args ? args.stack : undefined;
            resourceInputs["dcdownstreamWebhooks"] = undefined /*out*/;
            resourceInputs["downstreamRef"] = undefined /*out*/;
        } else {
            resourceInputs["dcdownstreamWebhooks"] = undefined /*out*/;
            resourceInputs["downstreamRef"] = undefined /*out*/;
            resourceInputs["downstreamRefs"] = undefined /*out*/;
            resourceInputs["organization"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["stack"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AutoDeployer.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a AutoDeployer resource.
 */
export interface AutoDeployerArgs {
    downstreamRefs: pulumi.Input<pulumi.Input<string>[]>;
    organization: pulumi.Input<string>;
    project: pulumi.Input<string>;
    stack: pulumi.Input<string>;
}
