// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autodeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AutoDeployer struct {
	pulumi.ResourceState

	DeploymentWebhookURLs pulumi.StringArrayOutput `pulumi:"deploymentWebhookURLs"`
	Organization          pulumi.StringOutput      `pulumi:"organization"`
	Project               pulumi.StringOutput      `pulumi:"project"`
	Stack                 pulumi.StringOutput      `pulumi:"stack"`
}

// NewAutoDeployer registers a new resource with the given unique name, arguments, and options.
func NewAutoDeployer(ctx *pulumi.Context,
	name string, args *AutoDeployerArgs, opts ...pulumi.ResourceOption) (*AutoDeployer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Downstream == nil {
		return nil, errors.New("invalid value for required argument 'Downstream'")
	}
	if args.Organization == nil {
		return nil, errors.New("invalid value for required argument 'Organization'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.Stack == nil {
		return nil, errors.New("invalid value for required argument 'Stack'")
	}
	var resource AutoDeployer
	err := ctx.RegisterRemoteComponentResource("auto-deploy:index:AutoDeployer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type autoDeployerArgs struct {
	Downstream   []interface{} `pulumi:"downstream"`
	Organization string        `pulumi:"organization"`
	Project      string        `pulumi:"project"`
	Stack        string        `pulumi:"stack"`
}

// The set of arguments for constructing a AutoDeployer resource.
type AutoDeployerArgs struct {
	Downstream   pulumi.ArrayInput
	Organization pulumi.StringInput
	Project      pulumi.StringInput
	Stack        pulumi.StringInput
}

func (AutoDeployerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoDeployerArgs)(nil)).Elem()
}

type AutoDeployerInput interface {
	pulumi.Input

	ToAutoDeployerOutput() AutoDeployerOutput
	ToAutoDeployerOutputWithContext(ctx context.Context) AutoDeployerOutput
}

func (*AutoDeployer) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoDeployer)(nil)).Elem()
}

func (i *AutoDeployer) ToAutoDeployerOutput() AutoDeployerOutput {
	return i.ToAutoDeployerOutputWithContext(context.Background())
}

func (i *AutoDeployer) ToAutoDeployerOutputWithContext(ctx context.Context) AutoDeployerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoDeployerOutput)
}

type AutoDeployerOutput struct{ *pulumi.OutputState }

func (AutoDeployerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoDeployer)(nil)).Elem()
}

func (o AutoDeployerOutput) ToAutoDeployerOutput() AutoDeployerOutput {
	return o
}

func (o AutoDeployerOutput) ToAutoDeployerOutputWithContext(ctx context.Context) AutoDeployerOutput {
	return o
}

func (o AutoDeployerOutput) DeploymentWebhookURLs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AutoDeployer) pulumi.StringArrayOutput { return v.DeploymentWebhookURLs }).(pulumi.StringArrayOutput)
}

func (o AutoDeployerOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoDeployer) pulumi.StringOutput { return v.Organization }).(pulumi.StringOutput)
}

func (o AutoDeployerOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoDeployer) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o AutoDeployerOutput) Stack() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoDeployer) pulumi.StringOutput { return v.Stack }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutoDeployerInput)(nil)).Elem(), &AutoDeployer{})
	pulumi.RegisterOutputType(AutoDeployerOutput{})
}
