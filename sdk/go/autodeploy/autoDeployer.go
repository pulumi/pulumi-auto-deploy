// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autodeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Automatically trigger downstream updates on dependent stacks via Pulumi Deployments.
// AutoDeployer requires that stacks have Deployment Settings configured.
type AutoDeployer struct {
	pulumi.ResourceState

	// A list of `AutoDeployer.DownstreamRef` indicating which stacks should
	// automatically be updated via Pulumi Deployments when this stack is successfully updated.
	DownstreamRefs pulumi.StringArrayOutput `pulumi:"downstreamRefs"`
	// A list of webhook URLs configured on this stack to trigger downstream deployments.
	DownstreamWebhooks pulumi.StringArrayOutput `pulumi:"downstreamWebhooks"`
	// The organization name for the AutoDeployer stack.
	Organization pulumi.StringOutput `pulumi:"organization"`
	// The project name for the AutoDeployer stack.
	Project pulumi.StringOutput `pulumi:"project"`
	// The output reference that can be passed to another AutoDeployer's downstreamRefs list
	// to configure depedent updates.
	Ref pulumi.StringOutput `pulumi:"ref"`
	// The stack name for this AutoDeployer.
	Stack pulumi.StringOutput `pulumi:"stack"`
}

// NewAutoDeployer registers a new resource with the given unique name, arguments, and options.
func NewAutoDeployer(ctx *pulumi.Context,
	name string, args *AutoDeployerArgs, opts ...pulumi.ResourceOption) (*AutoDeployer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DownstreamRefs == nil {
		return nil, errors.New("invalid value for required argument 'DownstreamRefs'")
	}
	if args.Organization == nil {
		return nil, errors.New("invalid value for required argument 'Organization'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.Stack == nil {
		return nil, errors.New("invalid value for required argument 'Stack'")
	}
	var resource AutoDeployer
	err := ctx.RegisterRemoteComponentResource("auto-deploy:index:AutoDeployer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type autoDeployerArgs struct {
	// A list of `AutoDeployer.DownstreamRef` indicating which stacks should
	// automatically be updated via Pulumi Deployments when this stack is successfully updated.
	DownstreamRefs []string `pulumi:"downstreamRefs"`
	// The organization name for the AutoDeployer stack.
	Organization string `pulumi:"organization"`
	// The project name for the AutoDeployer stack.
	Project string `pulumi:"project"`
	// The stack name for this AutoDeployer.
	Stack string `pulumi:"stack"`
}

// The set of arguments for constructing a AutoDeployer resource.
type AutoDeployerArgs struct {
	// A list of `AutoDeployer.DownstreamRef` indicating which stacks should
	// automatically be updated via Pulumi Deployments when this stack is successfully updated.
	DownstreamRefs pulumi.StringArrayInput
	// The organization name for the AutoDeployer stack.
	Organization pulumi.StringInput
	// The project name for the AutoDeployer stack.
	Project pulumi.StringInput
	// The stack name for this AutoDeployer.
	Stack pulumi.StringInput
}

func (AutoDeployerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoDeployerArgs)(nil)).Elem()
}

type AutoDeployerInput interface {
	pulumi.Input

	ToAutoDeployerOutput() AutoDeployerOutput
	ToAutoDeployerOutputWithContext(ctx context.Context) AutoDeployerOutput
}

func (*AutoDeployer) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoDeployer)(nil)).Elem()
}

func (i *AutoDeployer) ToAutoDeployerOutput() AutoDeployerOutput {
	return i.ToAutoDeployerOutputWithContext(context.Background())
}

func (i *AutoDeployer) ToAutoDeployerOutputWithContext(ctx context.Context) AutoDeployerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoDeployerOutput)
}

type AutoDeployerOutput struct{ *pulumi.OutputState }

func (AutoDeployerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoDeployer)(nil)).Elem()
}

func (o AutoDeployerOutput) ToAutoDeployerOutput() AutoDeployerOutput {
	return o
}

func (o AutoDeployerOutput) ToAutoDeployerOutputWithContext(ctx context.Context) AutoDeployerOutput {
	return o
}

// A list of `AutoDeployer.DownstreamRef` indicating which stacks should
// automatically be updated via Pulumi Deployments when this stack is successfully updated.
func (o AutoDeployerOutput) DownstreamRefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AutoDeployer) pulumi.StringArrayOutput { return v.DownstreamRefs }).(pulumi.StringArrayOutput)
}

// A list of webhook URLs configured on this stack to trigger downstream deployments.
func (o AutoDeployerOutput) DownstreamWebhooks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AutoDeployer) pulumi.StringArrayOutput { return v.DownstreamWebhooks }).(pulumi.StringArrayOutput)
}

// The organization name for the AutoDeployer stack.
func (o AutoDeployerOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoDeployer) pulumi.StringOutput { return v.Organization }).(pulumi.StringOutput)
}

// The project name for the AutoDeployer stack.
func (o AutoDeployerOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoDeployer) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The output reference that can be passed to another AutoDeployer's downstreamRefs list
// to configure depedent updates.
func (o AutoDeployerOutput) Ref() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoDeployer) pulumi.StringOutput { return v.Ref }).(pulumi.StringOutput)
}

// The stack name for this AutoDeployer.
func (o AutoDeployerOutput) Stack() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoDeployer) pulumi.StringOutput { return v.Stack }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutoDeployerInput)(nil)).Elem(), &AutoDeployer{})
	pulumi.RegisterOutputType(AutoDeployerOutput{})
}
